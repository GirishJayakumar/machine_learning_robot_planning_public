[agent1]
type = simulated_robot
data_type = numpy
start_state = [2.0, 0.0, 0.0, 20.0, 20.0, 0.0, 0.0, 0.0]
cost_evaluator = my_cost_evaluator1
dynamics = my_dynamics1
steps_per_action = 1
controller = my_controller1

[my_controller1]
type = CSSMPC
dynamics = my_dynamics1
cost_evaluator = my_cost_evaluator1
control_dim = 2
control_horizon = 10
stochastic_trajectories_sampler = my_stochastic_trajectories_sampler1
initial_control_sequence = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2]
speed = 7
ctrl_range = [[-1.0, 1.0], [-0.5, 1.0]]
ctrl_slew_rate = [[-0.4, 0.4], [-0.1, 0.1]]
prob_lvl = 0.8
load_k = 0
track_w = 2.0
Q = [3.0, 1.0, 0.0, 0.0, 0.0, 20.0, 20.0, 0.0]
QN = [30.0, 1000.0, 0.0, 0.0, 0.0, 1000.0, 2000.0, 0.0]
R = [20.0, 2.0]

[my_stochastic_trajectories_sampler1]
type = MPPI_stochastic_trajectories_sampler
number_of_trajectories = 100
uncontrolled_trajectories_portion = 0.0
noise_sampler = my_noise_sampler1

[my_noise_sampler1]
type = gaussian_noise_sampler
mean = [0, 0]
covariance = [[10, 0], [0, 10]]


[my_dynamics1]
type = autorally_dynamics
delta_t = 0.1
m = 21.7562
Iz = 1.124
lF = 0.34
lFR = 0.57
IwF = 0.1
IwR = 0.0373
rF = 0.095
rR = 0.090
h = 0.12
tire_B = 4.0
tire_C = 1.0
tire_D = 1.0
kSteering = -0.24
cSteering = -0.02
throttle_factor = 0.45
friction_nn_path = ''
throttle_nn_path = environment/dynamics/autorally_dynamics/throttle_model1.pth
track_path = environment/dynamics/autorally_dynamics/ccrf_track_optimal.npz


[my_cost_evaluator1]
type = quadratic_cost
collision_cost = 1000
goal_cost = -5000
Q = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
R = [[1.0, 0.0],[0.0, 1.0]]
goal_checker = my_goal_checker1
collision_checker = my_collision_checker1

[my_goal_checker1]
type = state_space_goal_checker
goal_state = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
goal_radius = 1.5

[my_collision_checker1]
type = point_collision_checker
obstacles = [[3.0,0.0], [7.0, 0.0]]
obstacles_radius = [1.5, 1.5]
kinematics = my_kinematics1

[my_kinematics1]
type = point_kinematics
radius = 0.5

[renderer1]
type = autorally_matplotlib
xaxis_range = [-1, 20]
yaxis_range = [-3, 3]
figure_size = [9, 9]
figure_dpi = 81
auto_range = False
